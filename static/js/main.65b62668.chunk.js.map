{"version":3,"sources":["components/card/card_component.jsx","components/card_list/card_list_component.jsx","components/search_box/search_box_component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monter","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","console","log","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,EAAO,SAAAC,GAEhB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,0BAAmEC,IAAI,YAC/E,6BAAML,EAAMG,OAAOG,OACnB,4BAAIN,EAAMG,OAAOI,YCLhBC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAM,OAAK,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,WCHhDO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,SAAUD,EAEhCE,KAAK,SAASH,YAAaA,MCsDpBI,G,wDAjDb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAEE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAClBU,QAAQC,IAAIrB,EAAUU,GACtB,IAAMY,EAAmBtB,EAASuB,QAAO,SAAAC,GAAO,OAC9CA,EAAQ3B,KAAK4B,cAAcC,SAAShB,EAAYe,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAC3D,cAAC,EAAD,CAAUJ,SAAUsB,W,GAhCVK,cCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.65b62668.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card_style.css'\r\n\r\nexport const Card = props => {\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monter.id}?set=set2&size=150x150`} alt=\"monster\" />\r\n            <h4 >{props.monter.name}</h4>\r\n            <p>{props.monter.email}</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { Card } from '../card/card_component';\r\nimport './card_list.css';\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card_list\">\r\n            {props.monsters.map(monter => (<Card key={monter.id} monter={monter} />))}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport './search_box_style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className=\"search\" onChange={handleChange}\r\n\r\n        type=\"search\" placeholder={placeholder} />\r\n)","// import React from 'react';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card_list/card_list_component';\nimport { SearchBox } from './components/search_box/search_box_component'\n\nimport './App.css';\n\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    console.log(monsters, searchField);\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex </h1>\n        <SearchBox placeholder=\"search Monster\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters}>\n\n        </CardList>\n\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Header />\n//       <h1>hi this is a test</h1>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}